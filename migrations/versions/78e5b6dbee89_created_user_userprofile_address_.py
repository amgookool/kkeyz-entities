"""Created User, UserProfile, Address,Category, Product and Inventory Schema Models

Revision ID: 78e5b6dbee89
Revises: 
Create Date: 2024-07-13 22:42:13.167819

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '78e5b6dbee89'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('users',
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('user_type', sa.Enum('ADMIN', 'CUSTOMER', 'STAFF', name='user_type'), nullable=False),
    sa.Column('force_password_reset', sa.Boolean(), nullable=False),
    sa.Column('user_status', sa.Enum('ACTIVE', 'INACTIVE', 'BANNED', 'DELETED', name='user_status'), nullable=False),
    sa.Column('two_fa_enabled', sa.Boolean(), nullable=False),
    sa.Column('two_fa_secret', sa.String(length=255), nullable=False),
    sa.Column('is_github_login', sa.Boolean(), nullable=False),
    sa.Column('is_google_login', sa.Boolean(), nullable=False),
    sa.Column('is_microsoft_login', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username'),
    schema='public'
    )
    op.create_table('products',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('media', sa.Text(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['public.categories.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_products_category_id'), 'products', ['category_id'], unique=False, schema='public')
    op.create_table('user_profiles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('last_name', sa.String(length=255), nullable=False),
    sa.Column('phone_number', sa.String(length=255), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('avatar', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_user_profiles_user_id'), 'user_profiles', ['user_id'], unique=True, schema='public')
    op.create_table('addresses',
    sa.Column('user_profile_id', sa.Integer(), nullable=False),
    sa.Column('street', sa.String(length=255), nullable=False),
    sa.Column('city', sa.String(length=255), nullable=False),
    sa.Column('zipcode', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['user_profile_id'], ['public.user_profiles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_addresses_user_profile_id'), 'addresses', ['user_profile_id'], unique=False, schema='public')
    op.create_table('inventory',
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=255), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['public.products.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_inventory_product_id'), 'inventory', ['product_id'], unique=False, schema='public')
    op.create_table('product_reviews',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('heading', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('media', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['public.products.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['public.user_profiles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_product_reviews_product_id'), 'product_reviews', ['product_id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_product_reviews_user_id'), 'product_reviews', ['user_id'], unique=False, schema='public')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_public_product_reviews_user_id'), table_name='product_reviews', schema='public')
    op.drop_index(op.f('ix_public_product_reviews_product_id'), table_name='product_reviews', schema='public')
    op.drop_table('product_reviews', schema='public')
    op.drop_index(op.f('ix_public_inventory_product_id'), table_name='inventory', schema='public')
    op.drop_table('inventory', schema='public')
    op.drop_index(op.f('ix_public_addresses_user_profile_id'), table_name='addresses', schema='public')
    op.drop_table('addresses', schema='public')
    op.drop_index(op.f('ix_public_user_profiles_user_id'), table_name='user_profiles', schema='public')
    op.drop_table('user_profiles', schema='public')
    op.drop_index(op.f('ix_public_products_category_id'), table_name='products', schema='public')
    op.drop_table('products', schema='public')
    op.drop_table('users', schema='public')
    op.drop_table('categories', schema='public')
    # ### end Alembic commands ###
